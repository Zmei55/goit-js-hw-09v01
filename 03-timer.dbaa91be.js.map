{"mappings":"AAEA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,+BACjCC,QAASF,SAASC,cAAc,8BAChCE,UAAWH,SAASC,cAAc,aA6DpC,MAAMG,EAAQ,IA1Dd,MACEC,aAAYC,OAAEA,EAAMC,WAAEA,IACpBC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKF,OAASA,EACdE,KAAKD,WAAaA,EAElBC,KAAKG,OAGPA,OACE,MAAMC,EAAOJ,KAAKK,kBAAkB,GACpCL,KAAKF,OAAOM,GAGdE,QACMN,KAAKE,WAITF,KAAKE,UAAW,EAEhBF,KAAKC,WAAaM,aAAY,KAC5B,MAAMC,EAAcC,KAAKC,MACnBC,EAAYX,KAAKD,WAAaS,EAC9BJ,EAAOJ,KAAKK,kBAAkBM,GAEhCA,EAAY,GACdC,cAAcZ,KAAKC,YAGrBY,EAAgBT,GAChBJ,KAAKF,OAAOM,GACZU,QAAQC,IAAI,OAAQX,KACnB,MAGLY,OACEJ,cAAcZ,KAAKC,YACnBD,KAAKE,UAAW,EAChB,MAAME,EAAOJ,KAAKK,kBAAkB,GACpCL,KAAKF,OAAOM,GAGdC,kBAAkBD,GAMhB,MAAO,C,KALMJ,KAAKiB,IAAIC,KAAKC,MAAMf,EAAQ,Q,MAC3BJ,KAAKiB,IAAIC,KAAKC,MAAMf,EAAS,MAAyB,O,KACvDJ,KAAKiB,IAAIC,KAAKC,MAAMf,EAAS,KAAoB,M,KACjDJ,KAAKiB,IAAIC,KAAKC,MAAMf,EAAS,IAAc,OAK1Da,IAAIG,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,OAIb,CACtBxB,OAAQe,EACRd,WAAY,IAAIU,KAAK,kBAMvB,SAASI,GAAgBU,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IAC5CpC,EAAKK,UAAUgC,YAAc,GAAGJ,KAAQC,KAASC,KAAQC,IAJ3DpC,EAAKC,SAASqC,iBAAiB,QAAShC,EAAMU,MAAMuB,KAAKjC,IACzDN,EAAKI,QAAQkC,iBAAiB,QAAShC,EAAMoB,KAAKa,KAAKjC","sources":["src/js/03-timer.js"],"sourcesContent":["import '../css/common.css';\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action=\"start\"]'),\n  stopBtn: document.querySelector('button[data-action=\"stop\"]'),\n  clockface: document.querySelector('#timer-1'),\n};\n\nclass Timer {\n  constructor({ onTick, targetDate }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n    this.targetDate = targetDate;\n\n    this.init();\n  }\n\n  init() {\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = this.targetDate - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n\n      if (deltaTime < 0) {\n        clearInterval(this.intervalId);\n      }\n\n      updateClockface(time);\n      this.onTick(time);\n      console.log('time', time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new Timer({\n  onTick: updateClockface,\n  targetDate: new Date('Jul 17, 2022'),\n});\n\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\nrefs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\nfunction updateClockface({ days, hours, mins, secs }) {\n  refs.clockface.textContent = `${days}:${hours}:${mins}:${secs}`;\n}\n"],"names":["$fcc425f06ee1f83c$var$refs","startBtn","document","querySelector","stopBtn","clockface","$fcc425f06ee1f83c$var$timer","constructor","onTick","targetDate","this","intervalId","isActive","init","time","getTimeComponents","start","setInterval","currentTime","Date","now","deltaTime","clearInterval","$fcc425f06ee1f83c$var$updateClockface","console","log","stop","pad","Math","floor","value","String","padStart","days","hours","mins","secs","textContent","addEventListener","bind"],"version":3,"file":"03-timer.dbaa91be.js.map"}